{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sharfi\\\\.cursor-tutor\\\\server\\\\models\\\\Personal\\\\src\\\\components\\\\TechAnimation.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport * as THREE from 'three';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TechAnimation = () => {\n  _s();\n  const mountRef = useRef(null);\n  useEffect(() => {\n    const scene = new THREE.Scene();\n    const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\n    const renderer = new THREE.WebGLRenderer({\n      alpha: true\n    });\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    mountRef.current.appendChild(renderer.domElement);\n\n    // Create a network of nodes and connections\n    const geometry = new THREE.SphereGeometry(0.5, 32, 32);\n    const material = new THREE.MeshBasicMaterial({\n      color: 0x133955\n    });\n    const nodes = [];\n    const connections = [];\n    for (let i = 0; i < 20; i++) {\n      const node = new THREE.Mesh(geometry, material);\n      node.position.set(Math.random() * 20 - 10, Math.random() * 20 - 10, Math.random() * 20 - 10);\n      scene.add(node);\n      nodes.push(node);\n    }\n    for (let i = 0; i < nodes.length; i++) {\n      for (let j = i + 1; j < nodes.length; j++) {\n        if (Math.random() > 0.8) {\n          const connection = new THREE.Line(new THREE.BufferGeometry().setFromPoints([nodes[i].position, nodes[j].position]), new THREE.LineBasicMaterial({\n            color: 0x135550\n          }));\n          scene.add(connection);\n          connections.push(connection);\n        }\n      }\n    }\n    camera.position.z = 15;\n    const animate = () => {\n      requestAnimationFrame(animate);\n      nodes.forEach(node => {\n        node.rotation.x += 0.01;\n        node.rotation.y += 0.01;\n      });\n      connections.forEach(connection => {\n        connection.rotation.x += 0.002;\n        connection.rotation.y += 0.002;\n      });\n      renderer.render(scene, camera);\n    };\n    animate();\n    const handleResize = () => {\n      camera.aspect = window.innerWidth / window.innerHeight;\n      camera.updateProjectionMatrix();\n      renderer.setSize(window.innerWidth, window.innerHeight);\n    };\n    window.addEventListener('resize', handleResize);\n    return () => {\n      window.removeEventListener('resize', handleResize);\n      mountRef.current.removeChild(renderer.domElement);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: mountRef,\n    style: {\n      position: 'fixed',\n      top: 0,\n      left: 0,\n      zIndex: -1\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 10\n  }, this);\n};\n_s(TechAnimation, \"V9/qkEdV8GfsDZk7lMTA1T8g5Ps=\");\n_c = TechAnimation;\nexport default TechAnimation;\nvar _c;\n$RefreshReg$(_c, \"TechAnimation\");","map":{"version":3,"names":["React","useEffect","useRef","THREE","jsxDEV","_jsxDEV","TechAnimation","_s","mountRef","scene","Scene","camera","PerspectiveCamera","window","innerWidth","innerHeight","renderer","WebGLRenderer","alpha","setSize","current","appendChild","domElement","geometry","SphereGeometry","material","MeshBasicMaterial","color","nodes","connections","i","node","Mesh","position","set","Math","random","add","push","length","j","connection","Line","BufferGeometry","setFromPoints","LineBasicMaterial","z","animate","requestAnimationFrame","forEach","rotation","x","y","render","handleResize","aspect","updateProjectionMatrix","addEventListener","removeEventListener","removeChild","ref","style","top","left","zIndex","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Sharfi/.cursor-tutor/server/models/Personal/src/components/TechAnimation.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\r\nimport * as THREE from 'three';\r\n\r\nconst TechAnimation = () => {\r\n  const mountRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const scene = new THREE.Scene();\r\n    const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\r\n    const renderer = new THREE.WebGLRenderer({ alpha: true });\r\n\r\n    renderer.setSize(window.innerWidth, window.innerHeight);\r\n    mountRef.current.appendChild(renderer.domElement);\r\n\r\n    // Create a network of nodes and connections\r\n    const geometry = new THREE.SphereGeometry(0.5, 32, 32);\r\n    const material = new THREE.MeshBasicMaterial({ color: 0x133955 });\r\n    \r\n    const nodes = [];\r\n    const connections = [];\r\n\r\n    for (let i = 0; i < 20; i++) {\r\n      const node = new THREE.Mesh(geometry, material);\r\n      node.position.set(\r\n        Math.random() * 20 - 10,\r\n        Math.random() * 20 - 10,\r\n        Math.random() * 20 - 10\r\n      );\r\n      scene.add(node);\r\n      nodes.push(node);\r\n    }\r\n\r\n    for (let i = 0; i < nodes.length; i++) {\r\n      for (let j = i + 1; j < nodes.length; j++) {\r\n        if (Math.random() > 0.8) {\r\n          const connection = new THREE.Line(\r\n            new THREE.BufferGeometry().setFromPoints([nodes[i].position, nodes[j].position]),\r\n            new THREE.LineBasicMaterial({ color: 0x135550 })\r\n          );\r\n          scene.add(connection);\r\n          connections.push(connection);\r\n        }\r\n      }\r\n    }\r\n\r\n    camera.position.z = 15;\r\n\r\n    const animate = () => {\r\n      requestAnimationFrame(animate);\r\n\r\n      nodes.forEach(node => {\r\n        node.rotation.x += 0.01;\r\n        node.rotation.y += 0.01;\r\n      });\r\n\r\n      connections.forEach(connection => {\r\n        connection.rotation.x += 0.002;\r\n        connection.rotation.y += 0.002;\r\n      });\r\n\r\n      renderer.render(scene, camera);\r\n    };\r\n\r\n    animate();\r\n\r\n    const handleResize = () => {\r\n      camera.aspect = window.innerWidth / window.innerHeight;\r\n      camera.updateProjectionMatrix();\r\n      renderer.setSize(window.innerWidth, window.innerHeight);\r\n    };\r\n\r\n    window.addEventListener('resize', handleResize);\r\n\r\n    return () => {\r\n      window.removeEventListener('resize', handleResize);\r\n      mountRef.current.removeChild(renderer.domElement);\r\n    };\r\n  }, []);\r\n\r\n  return <div ref={mountRef} style={{ position: 'fixed', top: 0, left: 0, zIndex: -1 }} />;\r\n};\r\n\r\nexport default TechAnimation;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}